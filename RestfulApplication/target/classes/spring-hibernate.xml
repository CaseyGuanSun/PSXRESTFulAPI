<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

   <!-- Hibernate4 -->
    <!-- 加载资源文件  其中包含变量信息，必须在Spring配置文件的最前面加载，即第一个加载-->
    <context:property-placeholder location="classpath:persistence-mysql.properties" />
    
    <!-- 数据库映射 -->
    <!--  class="org.apache.tomcat.dbcp.dbcp.BasicDataSource" -->
    <!--  class="org.springframework.jdbc.datasource.DriverManagerDataSource" -->
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
      <property name="driverClassName" value="${jdbc.driverClassName}" />
      <property name="url" value="${jdbc.url}" />
      <property name="username" value="${jdbc.user}" />
      <property name="password" value="${jdbc.pass}" />
       <!-- 初始化连接大小 -->
       <property name="initialSize" value="0" />
       <!-- 连接池最大使用连接数量 -->
       <property name="maxActive" value="20" />
       <!-- 连接池最大空闲 -->
       <property name="maxIdle" value="20" />
       <!-- 连接池最小空闲 -->
       <property name="minIdle" value="0" />
       <!-- 获取连接最大等待时间 -->
       <property name="maxWait" value="60000" />
       <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
       <property name="timeBetweenEvictionRunsMillis" value="60000" />
       <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
       <property name="minEvictableIdleTimeMillis" value="25200000" />
       
      
   </bean>
   
    <bean id="sessionFactory" 
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="annotatedClasses">
            <list>
                <!-- 可以加多个包 -->
                <value>com.posteritytech.spring.model.Cdr</value>
                <value>com.posteritytech.spring.model.CentraxGroup</value>
                <value>com.posteritytech.spring.model.CentraxNumber</value>
                <value>com.posteritytech.spring.model.SipEndPoint</value>
                <value>com.posteritytech.spring.model.ResourceGroup</value>
                <value>com.posteritytech.spring.model.RouteList</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
              <!--  <prop key="hibernate.current_session_context_class">thread</prop>   --> 
             	<prop key="hibernate.current_session_context_class">${current_session_context_class}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.connection.autocommit">${hibernate.connection.autocommit}</prop> 
            </props>
        </property>
    </bean>
       
    <!-- 配置Hibernate事务管理器 -->
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
      <property name="sessionFactory" ref="sessionFactory" />
   </bean>
   
   <!-- 配置事务异常封装 -->
   <bean id="persistenceExceptionTranslationPostProcessor" 
       class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
   
   <!-- added by casey 
<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	<property name="messageConverters">
		<list>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
		</list>
	</property>
</bean>

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"></bean>
            </list>
        </property>
    </bean>
    end -->

   
   <!--  声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="get*" propagation="REQUIRED" />
            <tx:method name="*" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>
    
    <aop:config expose-proxy="true">
        <!-- 只对业务逻辑层实施事务 -->
        <aop:pointcut id="txPointcut" expression="execution(* com.posteritytech.spring.service.*.*(..))" />
        <!-- Advisor定义，切入点和通知分别为txPointcut、txAdvice -->
        <aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>
    </aop:config>
    
    <!-- Resource Group -->
    <bean id="resourceGroupDAO" class="com.posteritytech.spring.dao.ResourceGroupDAO">
          <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <bean id="resourceGroupService" class="com.posteritytech.spring.service.ResourceGroupService">
    	<property name="resourceGroupDao" ref="resourceGroupDAO"></property>
    </bean>
    
    <!-- Route List -->
   	<bean id="routeListDAO" class="com.posteritytech.spring.dao.RouteListDAO">
          <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <bean id="routeListService" class="com.posteritytech.spring.service.RouteListService">
    	<property name="routeListDao" ref="routeListDAO"></property>
    </bean>
    
    <bean id="cdrDao" class="com.posteritytech.spring.dao.CdrDAO">
          <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <bean id="cdrService" class="com.posteritytech.spring.service.CdrService">
        <property name="cdrDao" ref="cdrDao"></property>
    </bean>
    
    <bean id="centraxGroupDao" class="com.posteritytech.spring.dao.CentraxGroupDAO">
    	<property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <bean id="centraxGroupService" class="com.posteritytech.spring.service.CentraxGroupService">
    	<property name="centraxGroupDao" ref="centraxGroupDao"></property>
    </bean>

	<bean id="centraxNumberDao" class="com.posteritytech.spring.dao.CentraxNumberDAO">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="centraxNumberService" class="com.posteritytech.spring.service.CentraxNumberService">
		<property name="centraxNumberDao" ref="centraxNumberDao"></property>
	</bean>
	<bean id="sipEndPointDao" class="com.posteritytech.spring.dao.SipEndPointDAO">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="sipEndPointService" class="com.posteritytech.spring.service.SipEndPointService">
		<property name="sipEndPointDao" ref="sipEndPointDao"></property>
	</bean>

</beans>
